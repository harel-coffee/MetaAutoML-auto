import sys
import dill
import json
import pandas as pd
import numpy as np
import os
{% if configuration.configuration["task"] in [":tabular_classification", ":tabular_regression"] %}
from dataset import read_csv_dataset
from preprocessing import rename_unnamed_columns, feature_preparation  
{% if configuration.configuration["task"] in [":tabular_classification"] %}
from tpot import TPOTClassifier  
{% else %}
from tpot import TPOTRegressor  
{% endif %}
{% endif %}


if __name__ == '__main__':
    filepath = sys.argv[1]
    save_path = sys.argv[2]
    X = None

    #Load live dataset
    X = read_csv_dataset(filepath)
    X = rename_unnamed_columns(X)
    X, y = feature_preparation(X, {{configuration.dataset_configuration["schema"]}}.items(), "{{configuration.dataset_configuration["file_configuration"]["datetime_format"]}}",  is_prediction=True)

    with open(sys.path[0] + '/model_TPOT.p', 'rb') as file:
        loaded_model = dill.load(file)

    {% if configuration.configuration["task"] in [":tabular_classification"] %}
    model = TPOTClassifier()
    {% else %}
    model = TPOTRegressor()
    {% endif %}
    model.fitted_pipeline_ = loaded_model
    predicted_y = loaded_model.predict(X)

    predicted_y = np.reshape(predicted_y, (-1, 1))
    pd.DataFrame(data=predicted_y, columns=["predicted"]).to_csv(save_path)



