version: "3.8"
services:
  controller:
    build: ./MetaAutoML-Controller
    container_name: controller
    # we map the port of the controller to the host.
    # This way we can either connect locally with localhost:5001
    # or from a docker container that accesses host.docker.internal:5001
    ports:
      - "5001:5001"
    environment:
      - AUTOKERAS_SERVICE_HOST=autokeras
      - AUTOKERAS_SERVICE_PORT=50052
      - SKLEARN_SERVICE_HOST=sklearn
      - SKLEARN_SERVICE_PORT=50055
      - FLAML_SERVICE_HOST=flaml
      - FLAML_SERVICE_PORT=50056
      - AUTOGLUON_SERVICE_HOST=autogluon
      - AUTOGLUON_SERVICE_PORT=50057
      - AUTOPYTORCH_SERVICE_HOST=pytorch
      - AUTOPYTORCH_SERVICE_PORT=50059
      - AUTOCVE_SERVICE_HOST=autocve
      - AUTOCVE_SERVICE_PORT=50058
    volumes:
      - datasets:/app/app-data/datasets
      - output:/app/app-data/output


    # adapters do not need to be available from the host machine -> no port mappings
  autokeras:
    build: ./adapters/MetaAutoML-Adapter-AutoKeras
    container_name: autokeras
    volumes:
      - datasets:/app/app-data/datasets
      - output:/app/app-data/output
#
#  flaml:
#    build: ./adapters/MetaAutoML-Adapter-Autosklearn
#    container_name: sklearn
#    volumes:
#      - datasets:/app/app-data/datasets
#      - output:/app/app-data/output
#
#  autogluon:
#    build: ./adapters/MetaAutoML-Adapter-AutoGluon
#    container_name: autogluon
#    volumes:
#      - datasets:/app/app-data/datasets
#      - output:/app/app-data/output
#
#  pytorch:
#    build: ./adapters/MetaAutoML-Adapter-AutoPytorch
#    container_name: pytorch
#    volumes:
#      - datasets:/app/app-data/datasets
#      - output:/app/app-data/output
#
#  autocve:
#    build: ./adapters/MetaAutoML-Adapter-AutoCVE
#    container_name: autocve
#    volumes:
#      - datasets:/app/app-data/datasets
#      - output:/app/app-data/output

volumes:
  datasets: # shared volume between controller and adapters to transfer datasets
  output: # shared volume between controller and adapters to transfer output files e.g. .zip file