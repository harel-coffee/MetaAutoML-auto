@page "/"
@inject IStringLocalizer<Global> L
@inject ISnackbar Snackbar
@inject IViewNotifier viewNotifier
@inject IApiClient apiClient
@attribute [Authorize]

<TopSection>
    <Breadcrumbs>
        <Breadcrumb Title="Home" />
    </Breadcrumbs>
</TopSection>

<PageTitle>Home</PageTitle>
<MudGrid>
    <MudItem xs="12" sm="12" md="12">
        <MudCard>
            <MudCardHeader Class="mud-theme-primary">
                <CardHeaderContent >
                    <MudText Typo="Typo.h6">Overview</MudText>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent>

            </MudCardContent>
        </MudCard>
    </MudItem>
    <MudItem xs="12" sm="6" md="6">
        <AllDatasetsTable SummaryVersion="true" Datasets="@_datasets" OnUploadCompletedCallback="@LoadDataset"/>
    </MudItem>
    <MudItem xs="12" sm="6" md="6">
        <RecentTrainings Trainings="@_trainings" SummaryVersion=true/>
    </MudItem>
</MudGrid>

@code {
    private GetAllTrainingsResponseDto _trainings;
    private GetDatasetsResponseDto _datasets;

    protected override async Task OnInitializedAsync()
    {
        await LoadTrainings();
    }

    private async Task LoadTrainings()
    {
        try
        {
            ApiResponseDto apiResponse = await apiClient.GetAllTrainings(new GetAllTrainingsRequestDto());

            if (apiResponse.IsSuccessStatusCode)
            {
                _trainings = Newtonsoft.Json.JsonConvert.DeserializeObject<GetAllTrainingsResponseDto>(apiResponse.Result.ToString());

                apiResponse = await apiClient.GetDatasets();
                await LoadDataset();
            }
            else
            {
                viewNotifier.Show(apiResponse.Message + " : " + apiResponse.StatusCode, ViewNotifierType.Error, L["Operation Failed"]);
            }
        }
        catch (Exception ex)
        {
            viewNotifier.Show(ex.GetBaseException().Message, ViewNotifierType.Error, L["Operation Failed"]);
        }
    }

    private async Task LoadDataset()
    {
        try
        {
            ApiResponseDto
            apiResponse = await apiClient.GetDatasets();

            if (apiResponse.IsSuccessStatusCode)
            {
                _datasets = Newtonsoft.Json.JsonConvert.DeserializeObject<GetDatasetsResponseDto>(apiResponse.Result.ToString());
                StateHasChanged();
                viewNotifier.Show(apiResponse.Message, ViewNotifierType.Success, L["Operation Successful"]);
            }
            else
            {
                viewNotifier.Show(apiResponse.Message + " : " + apiResponse.StatusCode, ViewNotifierType.Error, L["Operation Failed"]);
            }
        }
        catch (Exception ex)
        {
            viewNotifier.Show(ex.GetBaseException().Message, ViewNotifierType.Error, L["Operation Failed"]);
        }
    }
}
