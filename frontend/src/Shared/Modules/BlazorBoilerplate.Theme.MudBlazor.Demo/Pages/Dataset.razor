@page "/datasets/{id}"
@inject IStringLocalizer<Global> L
@inject IApiClient apiClient
@inject IViewNotifier viewNotifier
@inject NavigationManager NavManager
@attribute [Authorize]

@if (!string.IsNullOrEmpty(_pageTitle))
{
    <TopSection>
        <Breadcrumbs>
            <Breadcrumb Title="Datasets" Link="/datasets" />
            <Breadcrumb Title="@_pageTitle" />
        </Breadcrumbs>
    </TopSection>
}

<MudText Typo="Typo.h6">@_pageTitle</MudText>
<MudSpacer/>

<MudGrid>
    <MudItem xs="12" sm="12" md="12">
        <MudCard>
            <MudCardHeader Class="mud-theme-primary">
                <CardHeaderContent >
                    <MudText Typo="Typo.h6">Overview</MudText>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent>
                @if (_dataset == null)
                {
                    <DataLoaderSpinner />
                }
                else
                {
                    <MudGrid>
                        <MudItem xs="4" sm="4" md="4">
                            <MudText Typo="Typo.body1">Name: @_dataset.Name</MudText>
                            <MudText Typo="Typo.body1">Dataset type: @_dataset.Type.Properties["skos:prefLabel"]</MudText>
                        </MudItem>
                        <MudItem xs="4" sm="4" md="4">
                            <MudText Typo="Typo.body1">Date: @_dataset.Creation_date</MudText>
                        </MudItem>
                        <MudItem xs="4" sm="4" md="4">
                            <MudText Typo="Typo.body1">File Size: </MudText>
                            @if (@_dataset.Type.ID == ":tabular")
                            {
                                <MudText Typo="Typo.body1">Number of rows: @_dataset.Rows</MudText>
                                <MudText Typo="Typo.body1">Number of columns: @_dataset.Columns</MudText>
                            }
                        </MudItem>
                    </MudGrid>
                }
            </MudCardContent>
        </MudCard>
    </MudItem>
    <MudItem xs="3" sm="3" md="3">
        <NewTraining Dataset="_dataset"/>
    </MudItem>
    <MudItem xs="9" sm="9" md="9">
        <Top3Models Dataset="_dataset"/>
    </MudItem>
    <MudItem xs="12" sm="12" md="12">
        <DatasetAnalysis Dataset="_dataset"/>
    </MudItem>
</MudGrid>


@code{
    [Parameter]
    public string Id { get; set; }

    private string _pageTitle;
    private GetDatasetResponseDto _dataset;

    protected async override void OnInitialized()
    {
        await LoadDataset();
    }
    private async Task LoadDataset()
    {
        try
        {
            GetDatasetRequestDto datasetRequest = new GetDatasetRequestDto()
                {
                    Identifier = Id
                };
            ApiResponseDto apiResponse = await apiClient.GetDataset(datasetRequest);

            if (apiResponse.IsSuccessStatusCode)
            {
                _dataset = Newtonsoft.Json.JsonConvert.DeserializeObject<GetDatasetResponseDto>(apiResponse.Result.ToString());
                _pageTitle = "Dataset " + _dataset.Name;
                StateHasChanged();
                StateHasChanged();
                viewNotifier.Show(apiResponse.Message, ViewNotifierType.Success, L["Operation Successful"]);
            }
            else
            {
                viewNotifier.Show(apiResponse.Message + " : " + apiResponse.StatusCode, ViewNotifierType.Error, L["Operation Failed"]);
            }
        }
        catch (Exception ex)
        {
            viewNotifier.Show(ex.GetBaseException().Message, ViewNotifierType.Error, L["Operation Failed"]);
        }
    }
}

